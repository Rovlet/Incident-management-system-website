# Generated by Django 3.0.6 on 2020-05-18 14:26

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Uzytkownik',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('iduzytkownik', models.SmallAutoField(db_column='idUzytkownik', primary_key=True, serialize=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'db_table': 'uzytkownik',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Arkusz',
            fields=[
                ('idarkusz', models.AutoField(db_column='idArkusz', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'arkusz',
            },
        ),
        migrations.CreateModel(
            name='Diagnoza',
            fields=[
                ('iddiagnoza', models.SmallAutoField(db_column='idDiagnoza', primary_key=True, serialize=False)),
                ('opis', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'diagnoza',
            },
        ),
        migrations.CreateModel(
            name='Dzial',
            fields=[
                ('iddzial', models.SmallAutoField(db_column='idDzial', primary_key=True, serialize=False)),
                ('nazwa', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'dzial',
            },
        ),
        migrations.CreateModel(
            name='Osoba',
            fields=[
                ('idosoba', models.SmallAutoField(db_column='idOsoba', primary_key=True, serialize=False)),
                ('imie', models.CharField(max_length=20)),
                ('nazwisko', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'osoba',
            },
        ),
        migrations.CreateModel(
            name='PoziomIncydentu',
            fields=[
                ('idpoziom_incydentu', models.AutoField(db_column='idPoziom_incydentu', primary_key=True, serialize=False)),
                ('poziom', models.CharField(blank=True, db_column='Poziom', max_length=45, null=True)),
            ],
            options={
                'db_table': 'poziom_incydentu',
            },
        ),
        migrations.CreateModel(
            name='Pracownik',
            fields=[
                ('idpracownik', models.SmallAutoField(db_column='idPracownik', primary_key=True, serialize=False)),
                ('stanowisko', models.CharField(blank=True, max_length=45, null=True)),
                ('id_dzial', models.ForeignKey(blank=True, db_column='id_dzial', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.Dzial')),
                ('id_osoba', models.OneToOneField(db_column='id_osoba', on_delete=django.db.models.deletion.DO_NOTHING, to='user.Osoba')),
            ],
            options={
                'db_table': 'pracownik',
            },
        ),
        migrations.CreateModel(
            name='Priorytet',
            fields=[
                ('idpriorytet', models.AutoField(db_column='idPriorytet', primary_key=True, serialize=False)),
                ('nazwa', models.CharField(blank=True, max_length=45, null=True)),
                ('waga', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'priorytet',
            },
        ),
        migrations.CreateModel(
            name='Pytanie',
            fields=[
                ('idpytanie', models.SmallAutoField(db_column='idPytanie', primary_key=True, serialize=False)),
                ('tresc', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'pytanie',
            },
        ),
        migrations.CreateModel(
            name='RodzajIncydentu',
            fields=[
                ('idrodzaj_incydentu', models.SmallAutoField(db_column='idRodzaj_incydentu', primary_key=True, serialize=False)),
                ('nazwa', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'rodzaj_incydentu',
            },
        ),
        migrations.CreateModel(
            name='RodzajZdarzenia',
            fields=[
                ('idrodzaj_zdarzenia', models.SmallAutoField(db_column='idRodzaj_zdarzenia', primary_key=True, serialize=False)),
                ('nazwa', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'rodzaj_zdarzenia',
            },
        ),
        migrations.CreateModel(
            name='Sprawa',
            fields=[
                ('idsprawa', models.AutoField(db_column='idSprawa', primary_key=True, serialize=False)),
                ('opis_sprawy', models.TextField(blank=True, null=True)),
                ('data_przyjecia', models.DateTimeField(blank=True, null=True)),
                ('data_zamkniecia', models.DateTimeField(blank=True, null=True)),
                ('skutki_incydentu', models.TextField(blank=True, null=True)),
                ('raport_koncowy', models.TextField(blank=True, null=True)),
                ('id_poziom_incydentu', models.ForeignKey(blank=True, db_column='id_poziom_incydentu', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.PoziomIncydentu')),
                ('id_pracownika', models.ForeignKey(blank=True, db_column='id_pracownika', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.Pracownik')),
                ('id_priorytet', models.ForeignKey(db_column='id_priorytet', on_delete=django.db.models.deletion.DO_NOTHING, to='user.Priorytet')),
            ],
            options={
                'db_table': 'sprawa',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('idstatus', models.AutoField(db_column='idStatus', primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'status',
            },
        ),
        migrations.CreateModel(
            name='ZrodloIncydentu',
            fields=[
                ('idzrodlo_incydentu', models.AutoField(db_column='idZrodlo_incydentu', primary_key=True, serialize=False)),
                ('podmiot', models.CharField(blank=True, max_length=45, null=True)),
                ('adresy_ip_zrodla', models.CharField(blank=True, max_length=45, null=True)),
                ('cel_ataku', models.CharField(blank=True, max_length=45, null=True)),
                ('czy_jest_zagrozeniem', models.BooleanField(blank=True, null=True)),
                ('data_wywolania', models.DateTimeField(blank=True, null=True)),
                ('id_sprawa', models.ForeignKey(db_column='id_sprawa', on_delete=django.db.models.deletion.DO_NOTHING, to='user.Sprawa')),
            ],
            options={
                'db_table': 'zrodlo_incydentu',
            },
        ),
        migrations.CreateModel(
            name='Zgloszenie',
            fields=[
                ('idzgloszenie', models.AutoField(db_column='idZgloszenie', primary_key=True, serialize=False)),
                ('opis_zdarzenia', models.TextField(blank=True, null=True)),
                ('lokalizacja_zdarzenia', models.CharField(blank=True, max_length=45, null=True)),
                ('data_wystapienia', models.DateTimeField(blank=True, null=True)),
                ('nazwa_maszyny', models.CharField(blank=True, max_length=45, null=True)),
                ('podsiec', models.CharField(blank=True, max_length=45, null=True)),
                ('system_operacyjny', models.CharField(blank=True, max_length=45, null=True)),
                ('oprogramowanie', models.CharField(blank=True, max_length=45, null=True)),
                ('data_zgloszenia', models.DateTimeField(blank=True, null=True)),
                ('czy_przyjete', models.BooleanField(blank=True, null=True)),
                ('id_rodzaj_zdarzenia', models.ForeignKey(blank=True, db_column='id_rodzaj_zdarzenia', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.RodzajZdarzenia')),
                ('id_uzytkownik', models.ForeignKey(db_column='id_uzytkownik', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'zgloszenie',
            },
        ),
        migrations.CreateModel(
            name='SprawaIncydent',
            fields=[
                ('idsprawa_incydent', models.AutoField(db_column='idSprawa_Incydent', primary_key=True, serialize=False)),
                ('id_rodzaj_incydentu', models.ForeignKey(db_column='id_rodzaj_incydentu', on_delete=django.db.models.deletion.DO_NOTHING, to='user.RodzajIncydentu')),
                ('id_sprawa', models.ForeignKey(db_column='id_sprawa', on_delete=django.db.models.deletion.DO_NOTHING, to='user.Sprawa')),
            ],
            options={
                'db_table': 'sprawa_incydent',
            },
        ),
        migrations.AddField(
            model_name='sprawa',
            name='id_status',
            field=models.ForeignKey(db_column='id_status', on_delete=django.db.models.deletion.DO_NOTHING, to='user.Status'),
        ),
        migrations.AddField(
            model_name='sprawa',
            name='id_zgloszenie',
            field=models.OneToOneField(db_column='id_zgloszenie', on_delete=django.db.models.deletion.DO_NOTHING, to='user.Zgloszenie'),
        ),
        migrations.CreateModel(
            name='SciezkaPytan',
            fields=[
                ('idsciezka_pytan', models.AutoField(db_column='idSciezka_pytan', primary_key=True, serialize=False)),
                ('id_diagnoza_jesli_nie', models.ForeignKey(blank=True, db_column='id_diagnoza_jesli_nie', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='id_diagnoza_jesli_nie', to='user.Diagnoza')),
                ('id_diagnoza_jesli_tak', models.ForeignKey(blank=True, db_column='id_diagnoza_jesli_tak', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='id_diagnoza_jesli_tak', to='user.Diagnoza')),
                ('id_next_pytanie_jesli_nie', models.ForeignKey(blank=True, db_column='id_next_pytanie_jesli_nie', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='id_next_pytanie_jesli_nie', to='user.Pytanie')),
                ('id_next_pytanie_jesli_tak', models.ForeignKey(blank=True, db_column='id_next_pytanie_jesli_tak', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='id_next_pytanie_jesli_tak', to='user.Pytanie')),
                ('id_pytanie', models.ForeignKey(blank=True, db_column='id_pytanie', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='id_pytanie', to='user.Pytanie')),
                ('id_rodzaj_zdarzenia', models.ForeignKey(blank=True, db_column='id_rodzaj_zdarzenia', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.RodzajZdarzenia')),
            ],
            options={
                'db_table': 'sciezka_pytan',
            },
        ),
        migrations.CreateModel(
            name='Rozwiazanie',
            fields=[
                ('idrazwiazanie', models.AutoField(db_column='idRazwiazanie', primary_key=True, serialize=False)),
                ('tresc', models.TextField(blank=True, null=True)),
                ('id_diagnoza', models.ForeignKey(blank=True, db_column='id_diagnoza', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.Diagnoza')),
            ],
            options={
                'db_table': 'rozwiazanie',
            },
        ),
        migrations.CreateModel(
            name='Odpowiedz',
            fields=[
                ('idodpowiedz', models.AutoField(db_column='idOdpowiedz', primary_key=True, serialize=False)),
                ('odpowiedz', models.TextField(blank=True, null=True)),
                ('id_arkusz', models.ForeignKey(blank=True, db_column='id_arkusz', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.Arkusz')),
                ('id_pytanie', models.ForeignKey(blank=True, db_column='id_pytanie', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.Pytanie')),
            ],
            options={
                'db_table': 'odpowiedz',
            },
        ),
        migrations.CreateModel(
            name='Kontakt',
            fields=[
                ('idkontakt', models.AutoField(db_column='idKontakt', primary_key=True, serialize=False)),
                ('rodzaj_kontaktu', models.CharField(max_length=45)),
                ('adres_kontaktowy', models.CharField(max_length=60)),
                ('id_osoba', models.ForeignKey(db_column='id_osoba', on_delete=django.db.models.deletion.DO_NOTHING, to='user.Osoba')),
            ],
            options={
                'db_table': 'kontakt',
            },
        ),
        migrations.AddField(
            model_name='diagnoza',
            name='id_rodzaj_incydentu',
            field=models.ForeignKey(blank=True, db_column='id_rodzaj_incydentu', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.RodzajIncydentu'),
        ),
        migrations.CreateModel(
            name='DetaleNarazonychSystemow',
            fields=[
                ('iddetale_narazonych_systemow', models.AutoField(db_column='idDetale_narazonych_systemow', primary_key=True, serialize=False)),
                ('narazona_jednostka', models.CharField(blank=True, max_length=45, null=True)),
                ('adresy_ip', models.CharField(blank=True, max_length=45, null=True)),
                ('nazwy_domen', models.CharField(blank=True, max_length=45, null=True)),
                ('podstawowe_funkcje', models.CharField(blank=True, max_length=45, null=True)),
                ('systemy_operacyjne', models.CharField(blank=True, max_length=45, null=True)),
                ('narazone_oprogramowanie', models.CharField(blank=True, max_length=45, null=True)),
                ('uzytkownicy_systemu', models.CharField(blank=True, max_length=45, null=True)),
                ('srodki_bezpieczenstwa', models.CharField(blank=True, max_length=45, null=True)),
                ('lokalizacja', models.CharField(blank=True, max_length=45, null=True)),
                ('informacje_dodatkowe', models.CharField(blank=True, max_length=45, null=True)),
                ('id_sprawa', models.ForeignKey(db_column='id_sprawa', on_delete=django.db.models.deletion.DO_NOTHING, to='user.Sprawa')),
            ],
            options={
                'db_table': 'detale_narazonych_systemow',
            },
        ),
        migrations.AddField(
            model_name='arkusz',
            name='id_ostateczna_diagnoza',
            field=models.ForeignKey(blank=True, db_column='id_ostateczna_diagnoza', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.Diagnoza'),
        ),
        migrations.AddField(
            model_name='arkusz',
            name='id_rodzaj_zdarzenia',
            field=models.ForeignKey(blank=True, db_column='id_rodzaj_zdarzenia', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.RodzajZdarzenia'),
        ),
        migrations.AddField(
            model_name='arkusz',
            name='id_zgloszenie',
            field=models.ForeignKey(blank=True, db_column='id_zgloszenie', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.Zgloszenie'),
        ),
        migrations.AddField(
            model_name='uzytkownik',
            name='id_osoba',
            field=models.ForeignKey(blank=True, db_column='id_osoba', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.Osoba'),
        ),
        migrations.AddField(
            model_name='uzytkownik',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
